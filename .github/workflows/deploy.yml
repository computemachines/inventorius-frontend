name: Deploy new Releases

on:
  release:
    types: [released, prereleased, created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      # - name: Checkout
      #       uses: actions/checkout@v2
      #     - name: setup private key
      #       env:
      #         PRIVKEYENCRYPTED: ${{ secrets.DEPLOY_PRIVKEY_GPG_PASSWORD }}
      #       run: |
      #         gpg --quiet --batch --yes --decrypt --passphrase="$PRIVKEYENCRYPTED" --output github_id_rsa github_id_rsa.gpg
      #         chmod 600 github_id_rsa
      #     - name: get deployment package
      #       uses: actions/download-artifact@v2
      #       with:
      #         name: deployment-package
      #     - name: Upload deployment to production server
      #       run: |
      #         ls
      #         scp -i github_id_rsa -o UserKnownHostsFile=known_hosts inventory-app-package.tar.gz root@computemachines.com:inventory/
      - name: Run deployment commands on production server
        run: |
          ssh -T -i github_id_rsa -o UserKnownHostsFile=known_hosts root@computemachines.com << EOF
            rm inventory-frontend-package.tar.gz
            systemctl stop inventory-frontend.service
            wget https://github.com/computemachines/inventory-frontend/releases/latest/download/inventory-frontend-package.tar.gz
            
            cd inventory/
            rm -r node-deployment/*
            tar -zxvf ../inventory-app-package.tar.gz -C node-deployment/
            cd node-deployment
            source ~/.nvm/nvm.sh
            npm ci --production
            systemctl start inventory-frontend.service
